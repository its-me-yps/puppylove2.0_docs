openapi: 3.1.0
info:
  title: PuppyLove2.0_Backend
  description: |
    Programming Club is a community of IITK students who are highly enthusiastic about development, algorithms, security, ML, and all other aspects of programming.  
    **Contact**: [WEBSITE](https://pclub.in/) 
    # Introduction
    **PuppyLove** is a Dating App exclusively for IITK Campus.  
    This is an API Documentation for PuppyLove2.0_Backend [Github](https://github.com/pclubiitk/puppylove2.0_backend).  
    * Please note that this documentation does not offer direct API services but rather serves as a descriptive resource detailing the endpoints and their usage.  
    * If you're attempting to make requests to a live server or hosting your own instance of the PuppyLove2.0 application, please refer to this documentation for guide.
    # Getting Started
    * Explore the documentation to discover available endpoints and their usage.
    * Detailed JSON schemas are provided, outlining the structure required for both the data in POST requests and the expected formats for responses across all endpoints.
    * Endpoints are categorized into five sections based on their use case: Session, User, Admin, Fetch, Send, Verify. Note that an endpoint can belong to multiple sections.
    ## Authentication
    * PuppyLove2.0 employs JWT (JSON Web Token) authentication.
    * During session login, a JWT is generated and sent back to the user via a cookie.
    * Subsequent requests require the inclusion of the JWT within the cookie header, which is authenticated by the Auth Middleware on server.
    * Each JWT remains valid for a single session only.
    * When using a web browser, the cookie header is managed automatically by the browser itself. However, for manual requests or when not using a browser-based environment, it's essential to retrieve the cookie from the login response. Subsequent requests must include this retrieved cookie within the headers to ensure proper authentication.
  version: 1.0.0
  x-logo:
    url: https://pclub.in/images/pclub.png  

tags:
  - name: Session
    description: Endpoints for Session Login and Logout.
  - name: User
    description: Endpoints for Users.
  - name: Admin
    description: Endpoints for Admin Use.
  - name: Fetch
    description: Endpoints for Fetching Tabular Data Fields for all users.
  - name: Send
    description: Endpoints for user to insert data in DB.
  - name: Verify
    description: Enpoints for user to verify claims about data in DB.
paths:
  /users/mail:id:
    $ref: paths/users/mail:id.yaml
  /users/login/first:
    $ref: paths/users/login/first.yaml
  /session/login:
    $ref: paths/session/login.yaml
  /session/logout:
    $ref: paths/session/logout.yaml
  /session/admin/login:
    $ref: paths/session/admin/login.yaml
  /admin/user/deleteallusers:
    $ref: paths/admin/user/deleteallusers.yaml
  /admin/user/new:
    $ref: paths/admin/user/new.yaml
  /admin/user/delete:
    $ref: paths/admin/user/delete.yaml
  /admin/publish:
    $ref: paths/admin/publish.yaml
  /users/activeusers:
    $ref: paths/users/activeusers.yaml
  /users/fetchPublicKeys:
    $ref: paths/users/fetchPublicKeys.yaml
  /users/fetchall:
    $ref: paths/users/fetchall.yaml
  /users/fetchReturnHearts:
    $ref: paths/users/fetchReturnHearts.yaml
  /users/sendheartVirtual:
    $ref: paths/users/sendheartVirtual.yaml
  /users/sendheart:
    $ref: paths/users/sendheart.yaml
  /users/claimheart:
    $ref: paths/users/claimheart.yaml
  /users/verifyreturnhearts:
    $ref: paths/users/verifyreturnhearts.yaml
  /users/sentHeartDecoded:
    $ref: paths/users/sentHeartDecoded.yaml
  /special/returnclaimedheartlate:
    $ref: paths/users/special/returnclaimedheartlate.yaml
  /users/publish:
    $ref: paths/users/publish.yaml
  /users/mymatches:
    $ref: paths/users/mymatches.yaml